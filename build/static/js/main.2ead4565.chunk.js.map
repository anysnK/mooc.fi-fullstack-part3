{"version":3,"sources":["App/Components/Phonebook.js","App/Components/Input.js","App/Components/Filter.js","App/services/server.js","App/Components/Notification.js","App.js","index.js"],"names":["Phonebook","persons","onClick","length","scope","map","person","key","id","name","number","value","Input","newName","newNumber","onNewNameChange","onNewNumberChange","onSubmit","onChange","type","Filter","filter","onFilterChange","baseUrl","axios","get","then","response","data","newObject","post","delete","newPerson","put","Notification","notification","className","message","App","useState","setPersons","setNewName","setNewNumber","setFilter","setNotification","useEffect","services","fetchedPersons","personExists","reduce","exists","displayNotification","setTimeout","event","preventDefault","includes","window","confirm","singlePerson","helper","index","findIndex","catch","error","console","log","concat","target","toLowerCase","targetId","Number","p","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2ead4565.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n\r\n\r\nconst Phonebook = ({ persons, onClick }) => {\r\n\r\n    if (persons.length === 0) {\r\n        return (\r\n            <>\r\n                No numbers found\r\n            </>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <table>\r\n            <thead>\r\n                <tr>\r\n                    <th scope=\"col\">name</th>\r\n                    <th scope=\"col\">phone number</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {persons.map((person) => {\r\n                    return (\r\n                        <tr key={person.id}>\r\n                            <td>{person.name}</td><td>{person.number}</td>\r\n                            <td>\r\n                                <button \r\n                                    onClick={onClick}\r\n                                    value={person.id}>\r\n                                        delete\r\n                                </button>\r\n                            </td>\r\n                        </tr>\r\n                    )\r\n                })}\r\n            </tbody>\r\n        </table>\r\n    )\r\n}\r\n\r\nexport default Phonebook\r\n","import React from 'react'\r\n\r\nconst Input = ({ onClick, newName, newNumber, onNewNameChange, onNewNumberChange }) => {\r\n\r\n\r\n\r\n  return (\r\n\r\n\r\n    <form onSubmit={onClick}>\r\n      <div>\r\n        name: <input\r\n          value={newName}\r\n          onChange={onNewNameChange}\r\n        />\r\n      </div>\r\n      <div>\r\n        number: <input\r\n          value={newNumber}\r\n          onChange={onNewNumberChange}\r\n        />\r\n\r\n\r\n      </div>\r\n      <div>\r\n        <button type='submit'>add</button>\r\n      </div>\r\n    </form>\r\n\r\n  )\r\n}\r\n\r\nexport default Input\r\n","import React from 'react'\r\n//import PhonebookTable from './Phonebook/PhonebookTable'\r\n\r\nconst Filter = ({filter, onFilterChange }) => {\r\n\r\n\r\n    return (\r\n        <div>\r\n            Filter: <input\r\n                value={filter}\r\n                onChange={onFilterChange}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Filter","import axios from 'axios'\r\n\r\n\r\nconst baseUrl = '/api/phonebook'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst addPerson = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst deletePerson = id => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst updateNumber = (person, newNumber) => {\r\n    const newPerson = {name:person.name, number:newNumber, id:person.id}\r\n    const request = axios.put(`${baseUrl}/${person.id}`, newPerson)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, addPerson, deletePerson, updateNumber }","import React from 'react'\r\n\r\nconst Notification = ({ notification }) => {\r\n\r\n\r\n    if (notification === {}) {\r\n        return (\r\n            <>\r\n            </>\r\n        )\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n                < div className={notification.type} >\r\n                    {notification.message}\r\n                </div >\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Notification\r\n","import React, { useState, useEffect } from 'react'\r\nimport Phonebook from './App/Components/Phonebook'\r\nimport Input from './App/Components/Input'\r\nimport Filter from './App/Components/Filter'\r\nimport services from './App/services/server'\r\nimport Notification from './App/Components/Notification'\r\n\r\nconst App = () => {\r\n    \r\n    \r\n    const [persons, setPersons] = useState([])\r\n    const [newName, setNewName] = useState('')\r\n    const [newNumber, setNewNumber] = useState('')\r\n    const [filter, setFilter] = useState('')\r\n    const [notification, setNotification] = useState({})\r\n\r\n\r\n    useEffect(() => {\r\n        services\r\n            .getAll()\r\n            .then(fetchedPersons => setPersons(fetchedPersons))\r\n    }, [])\r\n\r\n    const addPerson = (event) => {\r\n        event.preventDefault()\r\n\r\n        //update persons from server\r\n        services\r\n            .getAll()\r\n            .then(fetchedPersons => setPersons(fetchedPersons))\r\n            .then((response) => {\r\n                //check if person exists already and has the same number at the same time\r\n                if (personExists()) {\r\n                    //person already exists with same number\r\n                    displayNotification('error', 'identical entry already exists')\r\n                } else if (persons.map(person => person.name).includes(newName)) {\r\n\r\n                    if (window.confirm('Person already exists with different number. Update?')) {\r\n                        //update number\r\n                        let singlePerson = persons.filter(person => person.name === newName)[0]\r\n                        services\r\n                            .updateNumber(singlePerson, newNumber)\r\n                            .then((response) => {\r\n                                //console.log('success?', response)\r\n                                let helper = [...persons]\r\n                                let index = helper.findIndex(person => person.name === newName)\r\n                                helper[index].number = newNumber\r\n                                setPersons(helper)\r\n                                displayNotification('success', 'Number updated')\r\n                            })\r\n                            .catch((error) => {\r\n                                console.log(error)\r\n                                displayNotification('error', 'couldnt update number, entry not found')\r\n                            })\r\n                    }\r\n                } else {\r\n                    //person doesnt exist \r\n                    services\r\n                        .addPerson({\r\n                            name: newName,\r\n                            number: newNumber\r\n                        })\r\n                        .then((response) => {\r\n                            displayNotification('success', `added ${newName}`)\r\n                            setPersons([...persons].concat(response))\r\n                        })\r\n                        .catch(error => displayNotification('error', `there was a problem adding ${newName} to the server`))\r\n                }\r\n            })\r\n    }\r\n\r\n    const personExists = () => {\r\n        return persons.reduce((exists, person) => {\r\n            return (exists\r\n                || (person.name === newName\r\n                    && person.number === newNumber))\r\n        }, false)\r\n    }\r\n\r\n    const displayNotification = (type, message) => {\r\n        setNotification({ type: type, message: message })\r\n        setTimeout(() => {\r\n            //console.log('resetting notification')\r\n            setNotification({})\r\n        }, 5000)\r\n    }\r\n\r\n    const handleNewNameChange = (event) => {\r\n        event.preventDefault()\r\n        //console.log('changed the newName', event.target.value)\r\n        setNewName(event.target.value)\r\n    }\r\n\r\n    const handleNewNumberChange = (event) => {\r\n        event.preventDefault()\r\n        //console.log('changed the newNumber', event.target.value)\r\n        setNewNumber(event.target.value)\r\n    }\r\n\r\n    const handleFilterChange = (event) => {\r\n        event.preventDefault()\r\n        //console.log('changed the newNumber', event.target.value)\r\n        setFilter(event.target.value)\r\n    }\r\n\r\n    const handleDeleteButton = (event) => {\r\n        event.preventDefault()\r\n        if (window.confirm('Do you really want to delete this entry?')) {\r\n\r\n            let targetId = Number(event.target.value)\r\n\r\n            services\r\n                .deletePerson(targetId)\r\n                .then((response) => {\r\n                    setPersons(persons.filter(p => { return (p.id !== targetId) }))\r\n\r\n                })\r\n                .then(() => displayNotification('success', 'person was deleted'))\r\n                .catch((error) => {\r\n                    displayNotification('error', 'could not delete this entry, not present on the server')\r\n                    setPersons(persons.filter(person => person.id !== targetId))\r\n                })\r\n\r\n        }\r\n        //console.log(event.target.value)\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1>Phonebook</h1>\r\n            <Notification notification={notification} />\r\n            <h3>Add a new person to Phonebook</h3>\r\n            <Input onClick={addPerson}\r\n                newName={newName}\r\n                newNumber={newNumber}\r\n                onNewNameChange={handleNewNameChange}\r\n                onNewNumberChange={handleNewNumberChange}\r\n            />\r\n\r\n            <h3>Numbers:</h3>\r\n            <Filter\r\n                filter={filter}\r\n                onFilterChange={handleFilterChange}\r\n            />\r\n            <Phonebook\r\n                persons={persons.filter(person => person.name.toLowerCase().includes(filter.toLowerCase()) || person.number.includes(filter))}\r\n                onClick={handleDeleteButton} />\r\n            {/* <div>debug: {newName}</div> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport'./index.css'\n\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}